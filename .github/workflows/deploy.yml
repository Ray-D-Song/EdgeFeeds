name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install wrangler
        run: npm install -g wrangler
      
      - name: Verify Cloudflare API Token
        run: |
          echo "Verifying Cloudflare API Token..."
          if wrangler whoami | grep -q "You are not authenticated."; then
            echo "Cloudflare API Token is not set. Please set it in the repository secrets."
            exit 1
          fi
      
      - name: Install pnpm
        run: |
          npm install -g pnpm

      - name: Build pages
        run: |
          cd pages
          pnpm i
          pnpm build
      
      - name: Check and create KV
        run: |
          cd dist/pages
          set -x
          KV_LIST=$(wrangler kv namespace list)
          KV_ID=$(echo $KV_LIST | jq -r '.[] | select(.title == "edge-feeds-KV") | .id')

          if [ -z "$KV_ID" ]; then
            CREATE_OUTPUT=$(wrangler kv namespace create KV)
            KV_ID=$(echo "$CREATE_OUTPUT" | sed -n 's/.*id = "\([^"]*\)".*/\1/p')
          else
            echo "KV namespace 'edge-feeds-KV' already exists."
          fi

          echo "KV ID=$KV_ID"
          echo "KV_ID=$KV_ID" >> $GITHUB_ENV

      - name: update wrangler.toml
        run: |
          cd dist/pages
          sed -i 's/id = ".*"/id = "'$KV_ID'"/' wrangler.toml

      - name: Create Pages project if not exists
        run: |
          if ! wrangler pages project list | grep -q "edge-feeds"; then
            wrangler pages project create edge-feeds --production-branch=main
          fi
  
      - name: Deploy pages
        run: cd dist/pages && wrangler pages deploy

      - name: Deploy worker
        run: |
          cd worker
          pnpm i
          wrangler deploy

env:
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}